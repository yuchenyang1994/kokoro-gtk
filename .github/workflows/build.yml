name: Build and Package

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.11"] # From .python-version

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgirepository-2.0-dev gcc libcairo2-dev pkg-config python3-dev gir1.2-gtk-4.0

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install pygobject3 gtk4

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Install project dependencies from pyproject.toml
          pip install .
          # Install PyInstaller
          pip install pyinstaller

      - name: Build for Linux (AppImage)
        if: runner.os == 'Linux'
        run: |
          echo "Building for Linux..."
          # Run PyInstaller to create the executable
          pyinstaller main.py --name xtts-gtk --onefile --noconsole --clean

          # Create AppDir structure
          APP_DIR="AppDir"
          mkdir -p "${APP_DIR}/usr/bin"
          cp "dist/xtts-gtk" "${APP_DIR}/usr/bin/"

          # Create AppRun script
          cat << 'EOF' > "${APP_DIR}/AppRun"
          #!/bin/sh
          HERE="$(dirname "$(readlink -f "${0}")")"
          exec "${HERE}/usr/bin/xtts-gtk" "$@"
          EOF
          chmod +x "${APP_DIR}/AppRun"

          # Create .desktop file
          cat << 'EOF' > "${APP_DIR}/wetts.desktop"
          [Desktop Entry]
          Name=XTTS-GTK
          Exec=xtts-gtk
          Icon=xtts-gtk
          Type=Application
          Categories=Utility;
          EOF

          # Download appimagetool
          APPIMAGETOOL_URL="https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          wget -q "${APPIMAGETOOL_URL}" -O appimagetool
          chmod +x appimagetool

          # Generate AppImage
          ./appimagetool "${APP_DIR}" "xtts-gtk-x86_64.AppImage"

      - name: Build for macOS
        if: runner.os == 'macOS'
        run: |
          echo "Building for macOS..."
          # Run PyInstaller to create the .app bundle
          pyinstaller main.py --name xtts-gtk --onefile --windowed --clean

          # Create a DMG file
          # Note: The .app bundle is created in dist/xtts-gtk.app
          # hdiutil requires the .app to be in a folder for -srcfolder
          mkdir -p macos_build
          mv dist/xtts-gtk.app macos_build/

          hdiutil create -volname "XTTS-GTK" -srcfolder "macos_build/xtts-gtk.app" -ov -format UDZO "xtts-gtk-macos.dmg"

      - name: Upload Linux AppImage artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: xtts-gtk-linux-appimage
          path: xtts-gtk-x86_64.AppImage
          retention-days: 7

      - name: Upload macOS DMG artifact
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: xtts-gtk-macos-dmg
          path: xtts-gtk-macos.dmg
          retention-days: 7
